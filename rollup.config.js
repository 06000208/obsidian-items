import typescript from '@rollup/plugin-typescript';
import {nodeResolve} from '@rollup/plugin-node-resolve';
import commonjs from '@rollup/plugin-commonjs';
import del from 'rollup-plugin-delete'
import copy from "rollup-plugin-copy";
import scss from 'rollup-plugin-scss'

const isProd = (process.env.BUILD === 'production');
const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/`;

export default {
  input: './src/main.ts',
  output: {
    dir: 'build',
    sourcemap: 'inline',
    sourcemapExcludeSources: isProd,
    format: 'cjs',
    exports: 'default',
    banner,
  },
  external: [ 'obsidian' ],
  plugins: [
    del({
      // Makes it more noticeable when files aren't overwritten due to not being generated
      // and acts as a safety measure against files from older builds being used in a release
      targets: [ 'build/main.js', 'build/styles.css', 'build/manifest.json', ],
      verbose: true,
    }),
    typescript(),
    nodeResolve({ browser: true }),
    commonjs(),
    copy({
      targets: [
          { src: 'manifest.json', dest: 'build/' },
          // { src: 'styles.css', dest: 'build/' },
      ],
    }),
    scss({
      // rollup-plugin-scss requires css files to be specified via import() inside your javascript/typescript code
      output: 'build/styles.css',
      outputStyle: 'compressed',
      watch: 'src/',
    }),
  ]
};